{%- from "rabbitmq/map.jinja" import server with context -%}
[
    {#
    {kernel,
            [{inet_dist_listen_min, 65535},
             {inet_dist_listen_max, 65535},
             {inet_default_listen_options, [{nodelay, true},
                                            {sndbuf, 65535},
                                            {recbuf, 65535},
                                            {keepalive, true}
                                           ]
             },
             {inet_default_connect_options, [{nodelay, true},
                                             {keepalive, true}
                                            ]
             }
            ]
    },#}{#
    {mnesia, [{dump_log_write_threshold, 1000}]}, #}
    {rabbit, [{vm_memory_high_watermark, {{ server.memory.vm_high_watermark }}},
              {memory_alarms, true},
              {disk_free_limit, 50000000},
{#-           {disk_free_limit, {#{mem_relative, 1.0}},       #}
              {%- if pillar.rabbitmq.cluster is defined %}
              {%- from "rabbitmq/map.jinja" import cluster with context %}
              {cluster_partition_handling, autoheal},
              {tcp_listen_options,
                        [binary,
                          {packet, raw},
                          {reuseaddr, true},
                          {backlog, 128},
                          {nodelay, true},
                          {exit_on_close, false},
                          {keepalive, true},
                          {sndbuf, 32768},
                          {recbuf, 32768}
                         ]
              },
              {cluster_nodes, {[{% for node in cluster.members %}'rabbit@{{ node.name }}'{% if not loop.last %}, {% endif %}{% endfor %}], {{ cluster.mode }}}},
              {%- endif %}
              {loopback_users, []},
              {tcp_listeners, [{"{{ server.bind.address }}",{{ server.bind.port }}}]}
              {%- if server.ssl is defined %},
              {ssl_listeners, [5671]},
              {ssl_options, [{cacertfile,"/etc/rabbitmq/ssl/cacert.pem"},
                             {certfile,"/etc/rabbitmq/ssl/cert.pem"},
                             {keyfile,"/etc/rabbitmq/ssl/key.pem"},
                             {verify, verify_none},
                             {fail_if_no_peer_cert,false}]
              }
              {% endif %}
             ]
    }{#,
    {rabbitmq_management, [{rates_mode, none}]} for the versions with mem leak#}
].
