{%- from "rabbitmq/map.jinja" import server with context -%}
[
    {rabbit, [{vm_memory_high_watermark, {{ server.memory.vm_high_watermark }}},
              {memory_alarms, true},
              {disk_free_limit, {{ server.disk_free_limit }}},
              {%- if pillar.rabbitmq.cluster is defined %}
              {%- from "rabbitmq/map.jinja" import cluster with context %}
              {cluster_partition_handling, autoheal},
              {tcp_listen_options,
                        [binary,
                          {packet, raw},
                          {reuseaddr, true},
                          {backlog, 128},
                          {nodelay, true},
                          {exit_on_close, false},
                          {keepalive, true},
                          {sndbuf, 32768},
                          {recbuf, 32768}
                         ]
              },
              {cluster_nodes, {[{% for node in cluster.members %}'rabbit@{{ node.name }}'{% if not loop.last %}, {% endif %}{% endfor %}], {{ cluster.mode }}}},
              {%- endif %}
              {loopback_users, []},
              {tcp_listeners, [{"{{ server.bind.address }}",{{ server.bind.port }}}]}
              {%- if server.get('ssl', {}).get('enabled', False) %},
              {ssl_listeners, [{"{{ server.bind.get('ssl', {}).get('address', server.bind.address) }}",{{ server.bind.get('ssl', {}).get('port', 5671) }}}]},
              {ssl_options, [{cacertfile,"{{ server.ssl.ca_file }}"},
                             {certfile,"{{ server.ssl.cert_file }}"},
                             {keyfile,"{{ server.ssl.key_file }}"},
                             {verify,verify_{{ server.ssl.get('verify', 'peer') }}},
                             {versions, ['{{ server.ssl.versions | join("', '") }}']},
                             {%- if server.ssl.ciphers is defined %}
                             {ciphers,[ {{ server.ssl.ciphers | join("', '") }} ]},
                             {%- endif %}
                             {fail_if_no_peer_cert,false}]}

              {% endif %}

             ]
    }
    {%- if 'rabbitmq_management' in server.plugins %},
    {rabbitmq_management,
              [{listener, [{port, {{ server.management.bind.port }} },
                           {ip, "{{ server.management.bind.address }}" }
                           {%- if server.management.get('ssl', {}).get('enabled', False) %},
                           {ssl,true},
                           {ssl_opts, [{cacertfile,"{{ server.ssl.ca_file }}"},
                                          {certfile,"{{ server.ssl.cert_file }}"},
                                          {keyfile,"{{ server.ssl.key_file }}"},
                                          {verify,verify_{{ server.ssl.get('verify', 'peer') }}},
                                          {versions,[ "{{ server.ssl.versions | join('", "') }}" ]},
                                          {%- if server.ssl.ciphers is defined %}
                                          {ciphers,[ {{ server.ssl.ciphers |  join("', '") }} ]},
                                          {%- endif %}]}
                         {%- endif %}
                         ]}]}
    {%- endif %}
].
